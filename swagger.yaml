swagger: '2.0'
info:
  description: EmailSender API
  version: 1.0.0
  title: EmailSender API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/v1/emails:
    post:
      summary: Add new email to the queue
      operationId: addMessageToQueue
      description: |
        Add a new email to the EmailSender's queue
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: from
          description: Sender's email address
          required: true
          type: string
        - in: formData
          name: to
          description: >-
            Email recipients separated by commas. Separated name and email
            adress format is also accepted.
          required: true
          type: string
        - in: formData
          name: cc
          description: >-
            Carbon copy email recipients separated by commas. Separated name and
            email adress format is also accepted.
          required: false
          type: string
        - in: formData
          name: bcc
          description: >-
            Blind carbon copy email recipients separated by commas. Separated
            name and email adress format is also accepted.
          required: false
          type: string
        - in: formData
          name: replyTo
          description: >-
            Reply to email address. Separated name and email adress format is
            also accepted.
          required: false
          type: string
        - in: formData
          name: subject
          description: Email's subject
          required: true
          type: string
        - in: formData
          name: body
          description: Email's body
          required: true
          type: string
        - in: formData
          name: delay
          description: Delay before send in seconds
          required: false
          type: integer
      responses:
        '201':
          description: Email added and sent successfully.
        '204':
          description: Email added succesfully to the queue.
        '400':
          description: Invalid request.
          schema:
            type: array
            items:
              $ref: '#/definitions/InvalidRequestResponse'
        '500':
          description: 'Errors happened during the email adding (database, queue, etc...).'
          schema:
            type: array
            items:
              $ref: '#/definitions/UnexceptedErrorResponse'
  /api/v1/emails/logs:
    get:
      summary: List email logs
      operationId: listLogs
      description: |
        List email logs from the system
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          description: Sender email address
          required: false
          type: string
        - in: query
          name: perPage
          description: Count per page
          default: 50
          required: false
          type: integer
        - in: query
          name: page
          description: Requested page number
          required: false
          type: integer
        - in: query
          name: lastComposedEmailId
          description: >-
            Returned email logs will be smaller composedEmailId's than this
            property
          required: false
          type: integer
      responses:
        '200':
          description: >-
            Return with the found message logs. (can be returned with empty
            array)
          schema:
            type: array
            items:
              $ref: '#/definitions/LogResponse'
        '400':
          description: Invalid request.
          schema:
            type: array
            items:
              $ref: '#/definitions/InvalidRequestResponse'
        '500':
          description: 'Errors happened during the logs reading (database, etc...).'
          schema:
            type: array
            items:
              $ref: '#/definitions/UnexceptedErrorResponse'
  /emails/list:
    get:
      summary: List logs html
      operationId: listLogsHtml
      description: User interface for log checking from the system
      produces:
        - text/html
      responses:
        '200':
          description: Email log lister viewer.
definitions:
  InvalidRequestResponse:
    type: object
    properties:
      message:
        type: string
        example: Invalid request.
      description:
        type: string
        example: 'Not allowed property: wrongProperty'
  UnexceptedErrorResponse:
    type: object
    properties:
      message:
        type: string
        example: Something went wrong when adding a new email.
      description:
        type: string
        example: Something went wrong when try to store the composed email.
  LogResponse:
    type: object
    properties:
      status:
        type: integer
        format: int32
        example: 0
      messages:
        type: array
        items:
          $ref: '#/definitions/MessageLog'
  MessageLog:
    type: object
    properties:
      messageLogId:
        type: integer
        format: int64
        example: 123456
      messageId:
        type: integer
        format: int64
        example: 123456
      from:
        $ref: '#/definitions/EmailAddress'
      recipients:
        properties:
          to:
            type: array
            items:
              $ref: '#/definitions/EmailAddress'
          cc:
            type: array
            items:
              $ref: '#/definitions/EmailAddress'
          bcc:
            type: array
            items:
              $ref: '#/definitions/EmailAddress'
      subject:
        type: string
        example: Email subject.
      logged:
        type: string
        example: '2017-08-23 01:45:19'
        format: date-time
      queued:
        type: string
        example: '2017-08-23 01:45:19'
        format: date-time
      sent:
        type: string
        example: '2017-08-23 01:45:19'
        format: date-time
      delay:
        type: integer
        format: int32
        example: 500
      status:
        type: integer
        format: int32
        description: 'error: -1, logged: 0, queued: 1, sent: 2'
        example: 2
      errorMessage:
        type: string
        description: 'if no error, it will be returned with null'
        example: null
  EmailAddress:
    type: object
    properties:
      name:
        type: string
        example: John Doe
      address:
        type: string
        example: john.doe@example.org
host: localhost
basePath: /
schemes:
  - http
